{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\components\\\\Post\\\\CardPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// @ts-nocheck\nimport React, { useState } from \"react\";\nimport { Card, Icon, Image, Divider, Segment, Button, Popup, Header, Modal } from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { deletePost, likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\nimport ImageModal from \"./ImageModal\";\nimport NoImageModal from \"./NoImageModal\";\n\nfunction CardPost({\n  post,\n  user,\n  setPosts,\n  setShowToastr,\n  socket\n}) {\n  const {\n    0: likes,\n    1: setLikes\n  } = useState(post.likes);\n  const isLiked = likes.length > 0 && likes.filter(like => like.user === user._id).length > 0;\n  const {\n    0: comments,\n    1: setComments\n  } = useState(post.comments);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n\n  const addPropsToModal = () => ({\n    post,\n    user,\n    setLikes,\n    likes,\n    isLiked,\n    comments,\n    setComments\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      open: showModal,\n      closeIcon: true,\n      closeOnDimmerClick: true,\n      onClose: () => setShowModal(false),\n      children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: post.picUrl ? /*#__PURE__*/_jsxDEV(ImageModal, _objectSpread({}, addPropsToModal()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(NoImageModal, _objectSpread({}, addPropsToModal()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/${post.user.username}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: post.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        color: \"teal\",\n        fluid: true,\n        children: [post.picUrl && /*#__PURE__*/_jsxDEV(Image, {\n          src: post.picUrl,\n          style: {\n            cursor: \"pointer\"\n          },\n          floated: \"left\",\n          wrapped: true,\n          ui: false,\n          alt: \"PostImage\",\n          onClick: () => setShowModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            floated: \"left\",\n            src: post.user.profilePicUrl,\n            avatar: true,\n            circular: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), (user.role === \"root\" || post.user._id === user._id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              on: \"click\",\n              position: \"top right\",\n              trigger: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"/deleteIcon.svg\",\n                style: {\n                  cursor: \"pointer\"\n                },\n                size: \"mini\",\n                floated: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                as: \"h4\",\n                content: \"Are you sure?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"This action is irreversible!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                icon: \"trash\",\n                content: \"Delete\",\n                onClick: () => deletePost(post._id, setPosts, setShowToastr)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), post.location && /*#__PURE__*/_jsxDEV(Card.Meta, {\n            content: post.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            style: {\n              fontSize: \"17px\",\n              letterSpacing: \"0.1px\",\n              wordSpacing: \"0.35px\"\n            },\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: calculateTime(post.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: isLiked ? \"heart\" : \"heart outline\",\n            color: \"red\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              if (socket.current) {\n                socket.current.emit(\"likePost\", {\n                  postId: post._id,\n                  userId: user._id,\n                  like: isLiked ? false : true\n                });\n                socket.current.on(\"postLiked\", () => {\n                  if (isLiked) {\n                    setLikes(prev => prev.filter(like => like.user !== user._id));\n                  } //\n                  else {\n                      setLikes(prev => [...prev, {\n                        user: user._id\n                      }]);\n                    }\n                });\n              } else {\n                likePost(post._id, user._id, setLikes, isLiked ? false : true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LikesList, {\n            postId: post._id,\n            trigger: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spanLikesList\",\n              children: `${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"comment outline\",\n            style: {\n              marginLeft: \"7px\"\n            },\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), comments.length > 0 && comments.map((comment, i) => i < 3 && /*#__PURE__*/_jsxDEV(PostComments, {\n            comment: comment,\n            postId: post._id,\n            user: user,\n            setComments: setComments\n          }, comment._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)), comments.length > 3 && /*#__PURE__*/_jsxDEV(Button, {\n            content: \"View More\",\n            color: \"teal\",\n            basic: true,\n            circular: true,\n            onClick: () => setShowModal(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentInputField, {\n            user: user,\n            postId: post._id,\n            setComments: setComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default CardPost;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/components/Post/CardPost.js"],"names":["React","useState","Card","Icon","Image","Divider","Segment","Button","Popup","Header","Modal","PostComments","CommentInputField","calculateTime","Link","deletePost","likePost","LikesList","ImageModal","NoImageModal","CardPost","post","user","setPosts","setShowToastr","socket","likes","setLikes","isLiked","length","filter","like","_id","comments","setComments","error","setError","showModal","setShowModal","addPropsToModal","picUrl","username","name","cursor","profilePicUrl","role","location","fontSize","letterSpacing","wordSpacing","text","createdAt","current","emit","postId","userId","on","prev","marginLeft","map","comment","i"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Divider,\r\n  Segment,\r\n  Button,\r\n  Popup,\r\n  Header,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport PostComments from \"./PostComments\";\r\nimport CommentInputField from \"./CommentInputField\";\r\nimport calculateTime from \"../../utils/calculateTime\";\r\nimport Link from \"next/link\";\r\nimport { deletePost, likePost } from \"../../utils/postActions\";\r\nimport LikesList from \"./LikesList\";\r\nimport ImageModal from \"./ImageModal\";\r\nimport NoImageModal from \"./NoImageModal\";\r\n\r\nfunction CardPost({ post, user, setPosts, setShowToastr, socket }) {\r\n  const [likes, setLikes] = useState(post.likes);\r\n\r\n  const isLiked =\r\n    likes.length > 0 &&\r\n    likes.filter((like) => like.user === user._id).length > 0;\r\n\r\n  const [comments, setComments] = useState(post.comments);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const addPropsToModal = () => ({\r\n    post,\r\n    user,\r\n    setLikes,\r\n    likes,\r\n    isLiked,\r\n    comments,\r\n    setComments,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal\r\n          open={showModal}\r\n          closeIcon\r\n          closeOnDimmerClick\r\n          onClose={() => setShowModal(false)}\r\n        >\r\n          <Modal.Content>\r\n            {post.picUrl ? (\r\n              <ImageModal {...addPropsToModal()} />\r\n            ) : (\r\n              <NoImageModal {...addPropsToModal()} />\r\n            )}\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n\r\n      <Card>\r\n        <Card.Header>\r\n          <Link href={`/${post.user.username}`}>\r\n            <a>{post.user.name}</a>\r\n          </Link>\r\n        </Card.Header>\r\n        <Card color=\"teal\" fluid>\r\n          {post.picUrl && (\r\n            <Image\r\n              src={post.picUrl}\r\n              style={{ cursor: \"pointer\" }}\r\n              floated=\"left\"\r\n              wrapped\r\n              ui={false}\r\n              alt=\"PostImage\"\r\n              onClick={() => setShowModal(true)}\r\n            />\r\n          )}\r\n\r\n          <Card.Content>\r\n            <Image\r\n              floated=\"left\"\r\n              src={post.user.profilePicUrl}\r\n              avatar\r\n              circular\r\n            />\r\n\r\n            {(user.role === \"root\" || post.user._id === user._id) && (\r\n              <>\r\n                <Popup\r\n                  on=\"click\"\r\n                  position=\"top right\"\r\n                  trigger={\r\n                    <Image\r\n                      src=\"/deleteIcon.svg\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      size=\"mini\"\r\n                      floated=\"right\"\r\n                    />\r\n                  }\r\n                >\r\n                  <Header as=\"h4\" content=\"Are you sure?\" />\r\n                  <p>This action is irreversible!</p>\r\n\r\n                  <Button\r\n                    color=\"red\"\r\n                    icon=\"trash\"\r\n                    content=\"Delete\"\r\n                    onClick={() =>\r\n                      deletePost(post._id, setPosts, setShowToastr)\r\n                    }\r\n                  />\r\n                </Popup>\r\n              </>\r\n            )}\r\n\r\n            {post.location && <Card.Meta content={post.location} />}\r\n\r\n            <Card.Description\r\n              style={{\r\n                fontSize: \"17px\",\r\n                letterSpacing: \"0.1px\",\r\n                wordSpacing: \"0.35px\",\r\n              }}\r\n            >\r\n              {post.text}\r\n            </Card.Description>\r\n          </Card.Content>\r\n          <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\r\n\r\n          <Card.Content extra>\r\n            <Icon\r\n              name={isLiked ? \"heart\" : \"heart outline\"}\r\n              color=\"red\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                if (socket.current) {\r\n                  socket.current.emit(\"likePost\", {\r\n                    postId: post._id,\r\n                    userId: user._id,\r\n                    like: isLiked ? false : true,\r\n                  });\r\n\r\n                  socket.current.on(\"postLiked\", () => {\r\n                    if (isLiked) {\r\n                      setLikes((prev) =>\r\n                        prev.filter((like) => like.user !== user._id)\r\n                      );\r\n                    }\r\n                    //\r\n                    else {\r\n                      setLikes((prev) => [...prev, { user: user._id }]);\r\n                    }\r\n                  });\r\n                } else {\r\n                  likePost(\r\n                    post._id,\r\n                    user._id,\r\n                    setLikes,\r\n                    isLiked ? false : true\r\n                  );\r\n                }\r\n              }}\r\n            />\r\n\r\n            <LikesList\r\n              postId={post._id}\r\n              trigger={\r\n                likes.length > 0 && (\r\n                  <span className=\"spanLikesList\">\r\n                    {`${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`}\r\n                  </span>\r\n                )\r\n              }\r\n            />\r\n\r\n            <Icon\r\n              name=\"comment outline\"\r\n              style={{ marginLeft: \"7px\" }}\r\n              color=\"blue\"\r\n            />\r\n\r\n            {comments.length > 0 &&\r\n              comments.map(\r\n                (comment, i) =>\r\n                  i < 3 && (\r\n                    <PostComments\r\n                      key={comment._id}\r\n                      comment={comment}\r\n                      postId={post._id}\r\n                      user={user}\r\n                      setComments={setComments}\r\n                    />\r\n                  )\r\n              )}\r\n\r\n            {comments.length > 3 && (\r\n              <Button\r\n                content=\"View More\"\r\n                color=\"teal\"\r\n                basic\r\n                circular\r\n                onClick={() => setShowModal(true)}\r\n              />\r\n            )}\r\n\r\n            <Divider hidden />\r\n\r\n            <CommentInputField\r\n              user={user}\r\n              postId={post._id}\r\n              setComments={setComments}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      </Card>\r\n      <Divider hidden />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardPost;\r\n"]},"metadata":{},"sourceType":"module"}