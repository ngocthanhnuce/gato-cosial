{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\pages\\\\signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// @ts-nocheck\nimport React, { useState, useRef } from \"react\";\nimport { Button, Divider, Form, Message, Segment } from \"semantic-ui-react\";\nimport CommonInputs from \"../components/Common/CommonInputs\";\nimport ImageDropDiv from \"../components/Common/ImageDropDiv\";\nimport { FooterMessage, HeaderMessage } from \"../components/Common/WelcomeMessage\";\nconst regexUserName = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n\nfunction Signup() {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    bio: \"\",\n    facebook: \"\",\n    youtube: \"\",\n    twitter: \"\",\n    instagram: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    bio\n  } = user;\n  const {\n    0: showSocialLinks,\n    1: setShowSocialLinks\n  } = useState(false);\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState(null);\n  const {\n    0: formLoading,\n    1: setFormLoading\n  } = useState(false);\n  const {\n    0: submitDisabled,\n    1: setSubmitDisabled\n  } = useState(true);\n  const {\n    0: media,\n    1: setMedia\n  } = useState(null);\n  const {\n    0: mediaPreview,\n    1: setMediaPreview\n  } = useState(null);\n  const {\n    0: highlighted,\n    1: setHighlighted\n  } = useState(false);\n  const inputRef = useRef();\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: usernameLoading,\n    1: setUsernameLoading\n  } = useState(false);\n  const {\n    0: usernameAvailable,\n    1: setUsernameAvailable\n  } = useState(false);\n\n  const handleChange = () => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === \"media\") {\n      setMedia(files[0]);\n      setMediaPreview(URL.createObjectURL(files[0]));\n    }\n\n    setUser(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      loading: formLoading,\n      error: errorMsg !== null,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: errorMsg,\n        onDismiss: () => setErrorMsg(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(ImageDropDiv, {\n          mediaPreview: mediaPreview,\n          setMediaPreview: setMediaPreview,\n          setMedia: setMedia,\n          inputRef: inputRef,\n          highlighted: highlighted,\n          setHighlighted: setHighlighted,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Name\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: handleChange,\n          fluid: true,\n          icon: \"user\",\n          iconPosition: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange,\n          fluid: true,\n          icon: \"envelope\",\n          iconPosition: \"left\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          fluid: true,\n          icon: {\n            name: \"eye\",\n            circular: true,\n            link: true,\n            onClick: () => setShowPassword(!showPassword)\n          },\n          iconPosition: \"left\",\n          type: showPassword ? \"text\" : \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          loading: usernameLoading,\n          error: !usernameAvailable,\n          required: true,\n          label: \"Username\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => {\n            setUsername(e.target.value);\n\n            if (regexUserName.test(e.target.value)) {\n              setUsernameAvailable(true);\n            } else {\n              setUsernameAvailable(false);\n            }\n          },\n          fluid: true,\n          icon: usernameAvailable ? \"check\" : \"close\",\n          iconPosition: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommonInputs, {\n          user: user,\n          showSocialLinks: showSocialLinks,\n          setShowSocialLinks: setShowSocialLinks,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"signup\",\n          content: \"Signup\",\n          type: \"submit\",\n          color: \"orange\",\n          disabled: submitDisabled || !usernameAvailable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/pages/signup.js"],"names":["React","useState","useRef","Button","Divider","Form","Message","Segment","CommonInputs","ImageDropDiv","FooterMessage","HeaderMessage","regexUserName","Signup","user","setUser","name","email","password","bio","facebook","youtube","twitter","instagram","showSocialLinks","setShowSocialLinks","showPassword","setShowPassword","errorMsg","setErrorMsg","formLoading","setFormLoading","submitDisabled","setSubmitDisabled","media","setMedia","mediaPreview","setMediaPreview","highlighted","setHighlighted","inputRef","username","setUsername","usernameLoading","setUsernameLoading","usernameAvailable","setUsernameAvailable","handleChange","value","files","e","target","URL","createObjectURL","prev","handleSubmit","circular","link","onClick","test"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, {useState, useRef} from \"react\";\r\nimport { Button, Divider, Form, Message, Segment } from \"semantic-ui-react\";\r\nimport CommonInputs from \"../components/Common/CommonInputs\";\r\nimport ImageDropDiv from \"../components/Common/ImageDropDiv\";\r\nimport { FooterMessage, HeaderMessage } from \"../components/Common/WelcomeMessage\";\r\nconst regexUserName = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\r\n\r\nfunction Signup() {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    bio: \"\",\r\n    facebook: \"\",\r\n    youtube: \"\",\r\n    twitter: \"\",\r\n    instagram: \"\"\r\n  }); \r\n\r\n  const { name, email, password, bio } = user;\r\n  const [showSocialLinks, setShowSocialLinks] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [submitDisabled, setSubmitDisabled] = useState(true);\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n  const [highlighted, setHighlighted] = useState(false);\r\n  const inputRef = useRef();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameLoading, setUsernameLoading] = useState(false);\r\n  const [usernameAvailable, setUsernameAvailable] = useState(false);\r\n\r\n  const handleChange = () => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (name === \"media\") {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n    }\r\n\r\n    setUser(prev => ({ ...prev, [name]: value }));\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderMessage />\r\n      <Form\r\n        loading={formLoading}\r\n        error={errorMsg !== null}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Message\r\n          error\r\n          header=\"Oops!\"\r\n          content={errorMsg}\r\n          onDismiss={() => setErrorMsg(null)}\r\n        />\r\n\r\n        <Segment>\r\n          <ImageDropDiv\r\n            mediaPreview={mediaPreview}\r\n            setMediaPreview={setMediaPreview}\r\n            setMedia={setMedia}\r\n            inputRef={inputRef}\r\n            highlighted={highlighted}\r\n            setHighlighted={setHighlighted}\r\n            handleChange={handleChange}\r\n          />\r\n          <Form.Input\r\n            required\r\n            label=\"Name\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            fluid\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n          />\r\n\r\n          <Form.Input\r\n            required\r\n            label=\"Email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            fluid\r\n            icon=\"envelope\"\r\n            iconPosition=\"left\"\r\n            type=\"email\"\r\n          />\r\n\r\n          <Form.Input\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            fluid\r\n            icon={{\r\n              name: \"eye\",\r\n              circular: true,\r\n              link: true,\r\n              onClick: () => setShowPassword(!showPassword),\r\n            }}\r\n            iconPosition=\"left\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            required\r\n          />\r\n\r\n          <Form.Input\r\n            loading={usernameLoading}\r\n            error={!usernameAvailable}\r\n            required\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n              if (regexUserName.test(e.target.value)) {\r\n                setUsernameAvailable(true);\r\n              } else {\r\n                setUsernameAvailable(false);\r\n              }\r\n            }}\r\n            fluid\r\n            icon={usernameAvailable ? \"check\" : \"close\"}\r\n            iconPosition=\"left\"\r\n          />\r\n\r\n          <CommonInputs\r\n            user={user}\r\n            showSocialLinks={showSocialLinks}\r\n            setShowSocialLinks={setShowSocialLinks}\r\n            handleChange={handleChange}\r\n          />\r\n\r\n          <Divider hidden />\r\n          <Button\r\n            icon=\"signup\"\r\n            content=\"Signup\"\r\n            type=\"submit\"\r\n            color=\"orange\"\r\n            disabled={submitDisabled || !usernameAvailable}\r\n          />\r\n        </Segment>\r\n      </Form>\r\n\r\n      <FooterMessage />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}