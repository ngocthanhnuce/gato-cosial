{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Admin/Documents/Gato-cocial/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Admin/Documents/Gato-cocial/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { NoPosts } from \"../components/Layout/Nodata\";\nimport CreatePost from \"../components/Post/CreatePost\";\nimport CardPost from \"../components/Post/CardPost\";\nimport { Segment } from \"semantic-ui-react\";\nimport { parseCookies } from \"nookies\";\n\nfunction Index(props) {\n  _s();\n\n  var _this = this;\n\n  var user = props.user,\n      postsData = props.postsData,\n      errorLoading = props.errorLoading;\n\n  var _useState = useState(postsData),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      showToastr = _useState2[0],\n      setShowToastr = _useState2[1];\n\n  var _useState3 = useState(2),\n      pageNumber = _useState3[0],\n      setPageNumber = _useState3[1];\n\n  var _useState4 = useState(null),\n      newNotification = _useState4[0],\n      setNewNotification = _useState4[1];\n\n  var _useState5 = useState(false),\n      notificationPopup = _useState5[0],\n      showNotificationPopup = _useState5[1];\n\n  var socket = useRef();\n  useEffect(function () {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", {\n        userId: user._id\n      });\n    }\n\n    document.title = \"Welcome \".concat(user.name.split(\"\")[0]);\n    return function () {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (socket.current) {\n      socket.current.on(\"newNotificationReceived\", function (_ref) {\n        var name = _ref.name,\n            profilePicUrl = _ref.profilePicUrl,\n            username = _ref.username,\n            postId = _ref.postId;\n        setNewNotification({\n          name: name,\n          profilePicUrl: profilePicUrl,\n          username: username,\n          postId: postId\n        });\n        showNotificationPopup(true);\n      });\n    }\n  }, []);\n  if (posts.length === 0 || errorLoading) return /*#__PURE__*/_jsxDEV(NoPosts, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 50\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notificationPopup && newNotification !== null && /*#__PURE__*/_jsxDEV(NotificationPortal, {\n      newNotification: newNotification,\n      notificationPopup: notificationPopup,\n      showNotificationPopup: showNotificationPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"15px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        user: user,\n        setPosts: setPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: posts === null || posts === void 0 ? void 0 : posts.map(function (post) {\n          return /*#__PURE__*/_jsxDEV(CardPost, {\n            post: post,\n            user: user,\n            setPosts: setPosts,\n            setShowToastr: setShowToastr\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Index, \"/ZuI60eoeZYVsPAStB605TwAPik=\");\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _parseCookies, token, res;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n            _context.next = 4;\n            return axios.get(\"\".concat(baseUrl, \"/api/posts\"), {\n              headers: {\n                Authorization: token\n              },\n              params: {\n                pageNumber: 1\n              }\n            });\n\n          case 4:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              postsData: res.data\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              errorLoading: true\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/pages/index.js"],"names":["React","useEffect","useState","useRef","axios","baseUrl","NoPosts","CreatePost","CardPost","Segment","parseCookies","Index","props","user","postsData","errorLoading","posts","setPosts","showToastr","setShowToastr","pageNumber","setPageNumber","newNotification","setNewNotification","notificationPopup","showNotificationPopup","socket","current","io","emit","userId","_id","document","title","name","split","off","on","profilePicUrl","username","postId","length","marginTop","marginBottom","map","post","getInitialProps","ctx","token","get","headers","Authorization","params","res","data"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,SAA7B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA;;AAAA,MACZC,IADY,GACsBD,KADtB,CACZC,IADY;AAAA,MACNC,SADM,GACsBF,KADtB,CACNE,SADM;AAAA,MACKC,YADL,GACsBH,KADtB,CACKG,YADL;;AAAA,kBAEMb,QAAQ,CAACY,SAAD,CAFd;AAAA,MAEbE,KAFa;AAAA,MAENC,QAFM;;AAAA,mBAGgBf,QAAQ,CAAC,KAAD,CAHxB;AAAA,MAGbgB,UAHa;AAAA,MAGDC,aAHC;;AAAA,mBAIgBjB,QAAQ,CAAC,CAAD,CAJxB;AAAA,MAIbkB,UAJa;AAAA,MAIDC,aAJC;;AAAA,mBAK0BnB,QAAQ,CAAC,IAAD,CALlC;AAAA,MAKboB,eALa;AAAA,MAKIC,kBALJ;;AAAA,mBAM+BrB,QAAQ,CAAC,KAAD,CANvC;AAAA,MAMbsB,iBANa;AAAA,MAMMC,qBANN;;AAQpB,MAAMC,MAAM,GAAGvB,MAAM,EAArB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACyB,MAAM,CAACC,OAAZ,EAAqB;AACnBD,MAAAA,MAAM,CAACC,OAAP,GAAiBC,EAAE,CAACvB,OAAD,CAAnB;AACD;;AACD,QAAIqB,MAAM,CAACC,OAAX,EAAoB;AAClBD,MAAAA,MAAM,CAACC,OAAP,CAAeE,IAAf,CAAoB,MAApB,EAA4B;AAAEC,QAAAA,MAAM,EAAEjB,IAAI,CAACkB;AAAf,OAA5B;AACD;;AACDC,IAAAA,QAAQ,CAACC,KAAT,qBAA4BpB,IAAI,CAACqB,IAAL,CAAUC,KAAV,CAAgB,EAAhB,EAAoB,CAApB,CAA5B;AACA,WAAO,YAAM;AACX,UAAIT,MAAM,CAACC,OAAX,EAAoB;AAClBD,QAAAA,MAAM,CAACC,OAAP,CAAeE,IAAf,CAAoB,YAApB;AACAH,QAAAA,MAAM,CAACC,OAAP,CAAeS,GAAf;AACD;AACF,KALD;AAMD,GAdQ,EAcN,EAdM,CAAT;AAeAnC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,MAAM,CAACC,OAAX,EAAoB;AAClBD,MAAAA,MAAM,CAACC,OAAP,CAAeU,EAAf,CACE,yBADF,EAEE,gBAA+C;AAAA,YAA5CH,IAA4C,QAA5CA,IAA4C;AAAA,YAAtCI,aAAsC,QAAtCA,aAAsC;AAAA,YAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,YAAbC,MAAa,QAAbA,MAAa;AAC7CjB,QAAAA,kBAAkB,CAAC;AAAEW,UAAAA,IAAI,EAAJA,IAAF;AAAQI,UAAAA,aAAa,EAAbA,aAAR;AAAuBC,UAAAA,QAAQ,EAARA,QAAvB;AAAiCC,UAAAA,MAAM,EAANA;AAAjC,SAAD,CAAlB;AAEAf,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,OANH;AAQD;AACF,GAXQ,EAWN,EAXM,CAAT;AAYA,MAAIT,KAAK,CAACyB,MAAN,KAAiB,CAAjB,IAAsB1B,YAA1B,EAAwC,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACxC,sBACE;AAAA,eACGS,iBAAiB,IAAIF,eAAe,KAAK,IAAzC,iBACC,QAAC,kBAAD;AACE,MAAA,eAAe,EAAEA,eADnB;AAEE,MAAA,iBAAiB,EAAEE,iBAFrB;AAGE,MAAA,qBAAqB,EAAEC;AAHzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OAAZ;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE9B,IAAlB;AAAwB,QAAA,QAAQ,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,kBACGD,KADH,aACGA,KADH,uBACGA,KAAK,CAAE4B,GAAP,CAAW,UAACC,IAAD;AAAA,8BACV,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,IAAI,EAAEhC,IAHR;AAIE,YAAA,QAAQ,EAAEI,QAJZ;AAKE,YAAA,aAAa,EAAEE;AALjB,aACO0B,IAAI,CAACd,GADZ;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAX;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAyBD;;GA/DQpB,K;;KAAAA,K;;AAiETA,KAAK,CAACmC,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEFrC,YAAY,CAACqC,GAAD,CAFV,EAEZC,KAFY,iBAEZA,KAFY;AAAA;AAAA,mBAIF5C,KAAK,CAAC6C,GAAN,WAAa5C,OAAb,iBAAkC;AAClD6C,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,EAAEH;AAAjB,eADyC;AAElDI,cAAAA,MAAM,EAAE;AAAEhC,gBAAAA,UAAU,EAAE;AAAd;AAF0C,aAAlC,CAJE;;AAAA;AAIdiC,YAAAA,GAJc;AAAA,6CASb;AAAEvC,cAAAA,SAAS,EAAEuC,GAAG,CAACC;AAAjB,aATa;;AAAA;AAAA;AAAA;AAAA,6CAWb;AAAEvC,cAAAA,YAAY,EAAE;AAAhB,aAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeJ,KAAf","sourcesContent":["// @ts-nocheck\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { NoPosts } from \"../components/Layout/Nodata\";\r\nimport CreatePost from \"../components/Post/CreatePost\";\r\nimport CardPost from \"../components/Post/CardPost\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { parseCookies } from \"nookies\";\r\n\r\nfunction Index(props) {\r\n  const { user, postsData, errorLoading } = props;\r\n  const [posts, setPosts] = useState(postsData);\r\n  const [showToastr, setShowToastr] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(2);\r\n  const [newNotification, setNewNotification] = useState(null);\r\n  const [notificationPopup, showNotificationPopup] = useState(false);\r\n\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!socket.current) {\r\n      socket.current = io(baseUrl);\r\n    }\r\n    if (socket.current) {\r\n      socket.current.emit(\"join\", { userId: user._id });\r\n    }\r\n    document.title = `Welcome ${user.name.split(\"\")[0]}`;\r\n    return () => {\r\n      if (socket.current) {\r\n        socket.current.emit(\"disconnect\");\r\n        socket.current.off();\r\n      }\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\r\n        \"newNotificationReceived\",\r\n        ({ name, profilePicUrl, username, postId }) => {\r\n          setNewNotification({ name, profilePicUrl, username, postId });\r\n\r\n          showNotificationPopup(true);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n  if (posts.length === 0 || errorLoading) return <NoPosts />;\r\n  return (\r\n    <>\r\n      {notificationPopup && newNotification !== null && (\r\n        <NotificationPortal\r\n          newNotification={newNotification}\r\n          notificationPopup={notificationPopup}\r\n          showNotificationPopup={showNotificationPopup}\r\n        />\r\n      )}\r\n      <div style={{ marginTop: \"15px\", marginBottom: \"20px\" }}>\r\n        <CreatePost user={user} setPosts={setPosts} />\r\n        <Segment>\r\n          {posts?.map((post) => (\r\n            <CardPost\r\n              key={post._id}\r\n              post={post}\r\n              user={user}\r\n              setPosts={setPosts}\r\n              setShowToastr={setShowToastr}\r\n            />\r\n          ))}\r\n        </Segment>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/posts`, {\r\n      headers: { Authorization: token },\r\n      params: { pageNumber: 1 },\r\n    });\r\n\r\n    return { postsData: res.data };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}