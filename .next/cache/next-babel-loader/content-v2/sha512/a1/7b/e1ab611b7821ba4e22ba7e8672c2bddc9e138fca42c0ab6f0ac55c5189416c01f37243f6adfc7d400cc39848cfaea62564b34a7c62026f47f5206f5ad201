{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\social_network\\\\gato-cosial\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport Layout from \"../components/Layout/Layout\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport axios from \"axios\";\nimport { destroyCookie, parseCookies } from \"nookies\";\nimport { redirectUser } from \"../utils/authUser\";\nimport baseUrl from \"../utils/baseUrl\";\n\nconst MyApp = props => {\n  const {\n    Component,\n    pageProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, _objectSpread(_objectSpread({}, pageProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\nMyApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  const {\n    token\n  } = parseCookies(ctx);\n  let pageProps = {};\n  const protectedRoutes = ctx.pathname === \"/\" || ctx.pathname === \"/[username]\" || ctx.pathname === \"/notifications\" || ctx.pathname === \"/post/[postId]\" || ctx.pathname === \"/messages\" || ctx.pathname === \"/search\";\n\n  if (!token) {\n    destroyCookie(ctx, \"token\");\n    protectedRoutes && redirectUser(ctx, \"/login\");\n  } //\n  else {\n      if (Component.getInitialProps) {\n        pageProps = await Component.getInitialProps(ctx);\n      }\n\n      try {\n        const res = await axios.get(`${baseUrl}/api/auth`, {\n          headers: {\n            Authorization: token\n          }\n        });\n        const {\n          user,\n          userFollowStats\n        } = res.data;\n        if (user) !protectedRoutes && redirectUser(ctx, \"/\");\n        pageProps.user = user;\n        pageProps.userFollowStats = userFollowStats;\n      } catch (error) {\n        destroyCookie(ctx, \"token\");\n        redirectUser(ctx, \"/login\");\n      }\n    }\n\n  return {\n    pageProps\n  };\n};\n\nexport default MyApp;","map":{"version":3,"sources":["E:/social_network/gato-cosial/pages/_app.js"],"names":["App","Layout","axios","destroyCookie","parseCookies","redirectUser","baseUrl","MyApp","props","Component","pageProps","getInitialProps","ctx","token","protectedRoutes","pathname","res","get","headers","Authorization","user","userFollowStats","data","error"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,SAA5C;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AACA,sBACE,QAAC,MAAD,kCAAYE,SAAZ;AAAA,2BACE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CAPD;;AASAH,KAAK,CAACI,eAAN,GAAwB,OAAO;AAACF,EAAAA,SAAD;AAAYG,EAAAA;AAAZ,CAAP,KAA4B;AAClD,QAAM;AAACC,IAAAA;AAAD,MAAUT,YAAY,CAACQ,GAAD,CAA5B;AACA,MAAIF,SAAS,GAAG,EAAhB;AACA,QAAMI,eAAe,GACrBF,GAAG,CAACG,QAAJ,KAAiB,GAAjB,IACAH,GAAG,CAACG,QAAJ,KAAiB,aADjB,IAEAH,GAAG,CAACG,QAAJ,KAAiB,gBAFjB,IAGAH,GAAG,CAACG,QAAJ,KAAiB,gBAHjB,IAIAH,GAAG,CAACG,QAAJ,KAAiB,WAJjB,IAKAH,GAAG,CAACG,QAAJ,KAAiB,SANjB;;AAQF,MAAI,CAACF,KAAL,EAAY;AACVV,IAAAA,aAAa,CAACS,GAAD,EAAM,OAAN,CAAb;AACAE,IAAAA,eAAe,IAAIT,YAAY,CAACO,GAAD,EAAM,QAAN,CAA/B;AACD,GAHD,CAIA;AAJA,OAKK;AACH,UAAIH,SAAS,CAACE,eAAd,EAA+B;AAC7BD,QAAAA,SAAS,GAAG,MAAMD,SAAS,CAACE,eAAV,CAA0BC,GAA1B,CAAlB;AACD;;AAED,UAAI;AACF,cAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEX,OAAQ,WAArB,EAAiC;AACjDY,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEN;AAAjB;AADwC,SAAjC,CAAlB;AAIA,cAAM;AAAEO,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAA4BL,GAAG,CAACM,IAAtC;AAEA,YAAIF,IAAJ,EAAU,CAACN,eAAD,IAAoBT,YAAY,CAACO,GAAD,EAAM,GAAN,CAAhC;AAEVF,QAAAA,SAAS,CAACU,IAAV,GAAiBA,IAAjB;AACAV,QAAAA,SAAS,CAACW,eAAV,GAA4BA,eAA5B;AACD,OAXD,CAWE,OAAOE,KAAP,EAAc;AACdpB,QAAAA,aAAa,CAACS,GAAD,EAAM,OAAN,CAAb;AACAP,QAAAA,YAAY,CAACO,GAAD,EAAM,QAAN,CAAZ;AACD;AACF;;AAED,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACC,CAvCD;;AAyCA,eAAeH,KAAf","sourcesContent":["import App from \"next/app\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport axios from \"axios\";\r\nimport { destroyCookie, parseCookies } from \"nookies\";\r\nimport { redirectUser } from \"../utils/authUser\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\n\r\nconst MyApp = (props) => {\r\n    const { Component, pageProps } = props;\r\n    return (\r\n      <Layout {...pageProps}>\r\n        <Component {...pageProps} />\r\n      </Layout>\r\n    );\r\n}\r\n\r\nMyApp.getInitialProps = async ({Component, ctx}) => {\r\n  const {token} = parseCookies(ctx);\r\n  let pageProps = {};\r\n  const protectedRoutes =\r\n  ctx.pathname === \"/\" ||\r\n  ctx.pathname === \"/[username]\" ||\r\n  ctx.pathname === \"/notifications\" ||\r\n  ctx.pathname === \"/post/[postId]\" ||\r\n  ctx.pathname === \"/messages\" ||\r\n  ctx.pathname === \"/search\";\r\n\r\nif (!token) {\r\n  destroyCookie(ctx, \"token\");\r\n  protectedRoutes && redirectUser(ctx, \"/login\");\r\n}\r\n//\r\nelse {\r\n  if (Component.getInitialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`${baseUrl}/api/auth`, {\r\n      headers: { Authorization: token }\r\n    });\r\n\r\n    const { user, userFollowStats } = res.data;\r\n\r\n    if (user) !protectedRoutes && redirectUser(ctx, \"/\");\r\n\r\n    pageProps.user = user;\r\n    pageProps.userFollowStats = userFollowStats;\r\n  } catch (error) {\r\n    destroyCookie(ctx, \"token\");\r\n    redirectUser(ctx, \"/login\");\r\n  }\r\n}\r\n\r\nreturn { pageProps };\r\n}\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}