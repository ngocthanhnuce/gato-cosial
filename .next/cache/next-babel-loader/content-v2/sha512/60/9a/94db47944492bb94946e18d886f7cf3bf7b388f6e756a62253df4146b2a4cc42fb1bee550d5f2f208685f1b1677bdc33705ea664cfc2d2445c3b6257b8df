{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Admin/Documents/Gato-cocial/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/Admin/Documents/Gato-cocial/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\components\\\\Post\\\\CardPost.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// @ts-nocheck\nimport React, { useState } from \"react\";\nimport { Card, Icon, Image, Divider, Segment, Button, Popup, Header, Modal } from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { deletePost, likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\nimport ImageModal from \"./ImageModal\";\nimport NoImageModal from \"./NoImageModal\";\n\nfunction CardPost(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post,\n      user = _ref.user,\n      setPosts = _ref.setPosts,\n      setShowToastr = _ref.setShowToastr,\n      socket = _ref.socket;\n\n  var _useState = useState(post.likes),\n      likes = _useState[0],\n      setLikes = _useState[1];\n\n  var isLiked = likes.length > 0 && likes.filter(function (like) {\n    return like.user === user._id;\n  }).length > 0;\n\n  var _useState2 = useState(post.comments),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      showModal = _useState4[0],\n      setShowModal = _useState4[1];\n\n  var addPropsToModal = function addPropsToModal() {\n    return {\n      post: post,\n      user: user,\n      setLikes: setLikes,\n      likes: likes,\n      isLiked: isLiked,\n      comments: comments,\n      setComments: setComments\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      open: showModal,\n      closeIcon: true,\n      closeOnDimmerClick: true,\n      onClose: function onClose() {\n        return setShowModal(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: post.picUrl ? /*#__PURE__*/_jsxDEV(ImageModal, _objectSpread({}, addPropsToModal()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(NoImageModal, _objectSpread({}, addPropsToModal()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        color: \"teal\",\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            floated: \"left\",\n            src: post.user.profilePicUrl,\n            avatar: true,\n            circular: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), (user.role === \"root\" || post.user._id === user._id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              on: \"click\",\n              position: \"top right\",\n              trigger: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"/deleteIcon.svg\",\n                style: {\n                  cursor: \"pointer\"\n                },\n                size: \"mini\",\n                floated: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                as: \"h4\",\n                content: \"Are you sure?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"This action is irreversible!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                icon: \"trash\",\n                content: \"Delete\",\n                onClick: function onClick() {\n                  return deletePost(post._id, setPosts, setShowToastr);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\".concat(post.user.username),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: post.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: calculateTime(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), post.location && /*#__PURE__*/_jsxDEV(Card.Meta, {\n            content: post.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), post.picUrl && /*#__PURE__*/_jsxDEV(Image, {\n          src: post.picUrl,\n          style: {\n            cursor: \"pointer\"\n          },\n          floated: \"left\",\n          wrapped: true,\n          ui: false,\n          alt: \"PostImage\",\n          onClick: function onClick() {\n            return setShowModal(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: /*#__PURE__*/_jsxDEV(Card.Description, {\n            style: {\n              fontSize: \"17px\",\n              letterSpacing: \"0.1px\",\n              wordSpacing: \"0.35px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"black\",\n                  paddingRight: \"5px\"\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"/\".concat(post.user.username),\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: post.user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: post.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: isLiked ? \"heart\" : \"heart outline\",\n            color: \"red\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: function onClick() {\n              if (socket.current) {\n                socket.current.emit(\"likePost\", {\n                  postId: post._id,\n                  userId: user._id,\n                  like: isLiked ? false : true\n                });\n                socket.current.on(\"postLiked\", function () {\n                  if (isLiked) {\n                    setLikes(function (prev) {\n                      return prev.filter(function (like) {\n                        return like.user !== user._id;\n                      });\n                    });\n                  } //\n                  else {\n                      setLikes(function (prev) {\n                        return [].concat(_toConsumableArray(prev), [{\n                          user: user._id\n                        }]);\n                      });\n                    }\n                });\n              } else {\n                likePost(post._id, user._id, setLikes, isLiked ? false : true);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LikesList, {\n            postId: post._id,\n            trigger: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spanLikesList\",\n              children: \"\".concat(likes.length, \" \").concat(likes.length === 1 ? \"like\" : \"likes\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"comment outline\",\n            style: {\n              marginLeft: \"7px\"\n            },\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"send\",\n            style: {\n              marginLeft: \"7px\"\n            },\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 14\n          }, this), comments.length > 0 && comments.map(function (comment, i) {\n            return i < 3 && /*#__PURE__*/_jsxDEV(PostComments, {\n              comment: comment,\n              postId: post._id,\n              user: user,\n              setComments: setComments\n            }, comment._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, _this);\n          }), comments.length > 3 && /*#__PURE__*/_jsxDEV(Button, {\n            content: \"View More\",\n            color: \"teal\",\n            basic: true,\n            circular: true,\n            onClick: function onClick() {\n              return setShowModal(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentInputField, {\n            user: user,\n            postId: post._id,\n            setComments: setComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CardPost, \"omR1xcd1MbppzuKtTDTb5rgaEDk=\");\n\n_c = CardPost;\nexport default CardPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPost\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/components/Post/CardPost.js"],"names":["React","useState","Card","Icon","Image","Divider","Segment","Button","Popup","Header","Modal","PostComments","CommentInputField","calculateTime","Link","deletePost","likePost","LikesList","ImageModal","NoImageModal","CardPost","post","user","setPosts","setShowToastr","socket","likes","setLikes","isLiked","length","filter","like","_id","comments","setComments","error","setError","showModal","setShowModal","addPropsToModal","picUrl","profilePicUrl","role","cursor","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","color","paddingRight","text","current","emit","postId","userId","on","prev","marginLeft","map","comment","i"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Divider,\r\n  Segment,\r\n  Button,\r\n  Popup,\r\n  Header,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport PostComments from \"./PostComments\";\r\nimport CommentInputField from \"./CommentInputField\";\r\nimport calculateTime from \"../../utils/calculateTime\";\r\nimport Link from \"next/link\";\r\nimport { deletePost, likePost } from \"../../utils/postActions\";\r\nimport LikesList from \"./LikesList\";\r\nimport ImageModal from \"./ImageModal\";\r\nimport NoImageModal from \"./NoImageModal\";\r\n\r\nfunction CardPost({ post, user, setPosts, setShowToastr, socket }) {\r\n  const [likes, setLikes] = useState(post.likes);\r\n\r\n  const isLiked =\r\n    likes.length > 0 &&\r\n    likes.filter((like) => like.user === user._id).length > 0;\r\n\r\n  const [comments, setComments] = useState(post.comments);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const addPropsToModal = () => ({\r\n    post,\r\n    user,\r\n    setLikes,\r\n    likes,\r\n    isLiked,\r\n    comments,\r\n    setComments,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal\r\n          open={showModal}\r\n          closeIcon\r\n          closeOnDimmerClick\r\n          onClose={() => setShowModal(false)}\r\n        >\r\n          <Modal.Content>\r\n            {post.picUrl ? (\r\n              <ImageModal {...addPropsToModal()} />\r\n            ) : (\r\n              <NoImageModal {...addPropsToModal()} />\r\n            )}\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n\r\n      <>\r\n        <Card color=\"teal\" fluid>\r\n          <Card.Content>\r\n            <Image\r\n              floated=\"left\"\r\n              src={post.user.profilePicUrl}\r\n              avatar\r\n              circular\r\n            />\r\n\r\n            {(user.role === \"root\" || post.user._id === user._id) && (\r\n              <>\r\n                <Popup\r\n                  on=\"click\"\r\n                  position=\"top right\"\r\n                  trigger={\r\n                    <Image\r\n                      src=\"/deleteIcon.svg\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      size=\"mini\"\r\n                      floated=\"right\"\r\n                    />\r\n                  }\r\n                >\r\n                  <Header as=\"h4\" content=\"Are you sure?\" />\r\n                  <p>This action is irreversible!</p>\r\n\r\n                  <Button\r\n                    color=\"red\"\r\n                    icon=\"trash\"\r\n                    content=\"Delete\"\r\n                    onClick={() =>\r\n                      deletePost(post._id, setPosts, setShowToastr)\r\n                    }\r\n                  />\r\n                </Popup>\r\n              </>\r\n            )}\r\n\r\n            <Card.Header>\r\n              <Link href={`/${post.user.username}`}>\r\n                <a>{post.user.name}</a>\r\n              </Link>\r\n            </Card.Header>\r\n\r\n            <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\r\n\r\n            {post.location && <Card.Meta content={post.location} />}\r\n          </Card.Content>\r\n          {post.picUrl && (\r\n            <Image\r\n              src={post.picUrl}\r\n              style={{ cursor: \"pointer\" }}\r\n              floated=\"left\"\r\n              wrapped\r\n              ui={false}\r\n              alt=\"PostImage\"\r\n              onClick={() => setShowModal(true)}\r\n            />\r\n          )}\r\n          <Card.Content>\r\n            <Card.Description\r\n              style={{\r\n                fontSize: \"17px\",\r\n                letterSpacing: \"0.1px\",\r\n                wordSpacing: \"0.35px\",\r\n              }}\r\n            >\r\n              <p>\r\n                <span style={{color: \"black\", paddingRight: \"5px\"}}>\r\n                  {\" \"}\r\n                  <Link href={`/${post.user.username}`}>\r\n                    <a>{post.user.name}</a>\r\n                  </Link>\r\n                </span>\r\n                <span>{post.text}</span>\r\n              </p>\r\n            </Card.Description>\r\n          </Card.Content>\r\n\r\n          <Card.Content extra>\r\n            <Icon\r\n              name={isLiked ? \"heart\" : \"heart outline\"}\r\n              color=\"red\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                if (socket.current) {\r\n                  socket.current.emit(\"likePost\", {\r\n                    postId: post._id,\r\n                    userId: user._id,\r\n                    like: isLiked ? false : true,\r\n                  });\r\n\r\n                  socket.current.on(\"postLiked\", () => {\r\n                    if (isLiked) {\r\n                      setLikes((prev) =>\r\n                        prev.filter((like) => like.user !== user._id)\r\n                      );\r\n                    }\r\n                    //\r\n                    else {\r\n                      setLikes((prev) => [...prev, { user: user._id }]);\r\n                    }\r\n                  });\r\n                } else {\r\n                  likePost(\r\n                    post._id,\r\n                    user._id,\r\n                    setLikes,\r\n                    isLiked ? false : true\r\n                  );\r\n                }\r\n              }}\r\n            />\r\n\r\n            <LikesList\r\n              postId={post._id}\r\n              trigger={\r\n                likes.length > 0 && (\r\n                  <span className=\"spanLikesList\">\r\n                    {`${likes.length} ${likes.length === 1 ? \"like\" : \"likes\"}`}\r\n                  </span>\r\n                )\r\n              }\r\n            />\r\n\r\n            <Icon\r\n              name=\"comment outline\"\r\n              style={{ marginLeft: \"7px\" }}\r\n              color=\"blue\"\r\n            />\r\n             <Icon\r\n              name=\"send\"\r\n              style={{ marginLeft: \"7px\" }}\r\n              color=\"black\"\r\n            />\r\n\r\n            {comments.length > 0 &&\r\n              comments.map(\r\n                (comment, i) =>\r\n                  i < 3 && (\r\n                    <PostComments\r\n                      key={comment._id}\r\n                      comment={comment}\r\n                      postId={post._id}\r\n                      user={user}\r\n                      setComments={setComments}\r\n                    />\r\n                  )\r\n              )}\r\n\r\n            {comments.length > 3 && (\r\n              <Button\r\n                content=\"View More\"\r\n                color=\"teal\"\r\n                basic\r\n                circular\r\n                onClick={() => setShowModal(true)}\r\n              />\r\n            )}\r\n\r\n            <Divider hidden />\r\n\r\n            <CommentInputField\r\n              user={user}\r\n              postId={post._id}\r\n              setComments={setComments}\r\n            />\r\n          </Card.Content>\r\n        </Card>\r\n      </>\r\n      <Divider hidden />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardPost;\r\n"]},"metadata":{},"sourceType":"module"}