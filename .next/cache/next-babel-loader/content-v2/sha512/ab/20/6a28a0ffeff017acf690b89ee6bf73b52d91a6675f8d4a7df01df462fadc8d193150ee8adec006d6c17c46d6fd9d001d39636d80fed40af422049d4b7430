{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\pages\\\\notifications.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Feed, Segment, Divider, Container } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { parseCookies } from \"nookies\";\nimport cookie from \"js-cookie\";\nimport { NoNotifications } from \"../components/Layout/NoData\";\nimport LikeNotification from \"../components/Notifications/LikeNotification\";\nimport CommentNotification from \"../components/Notifications/CommentNotification\";\nimport FollowerNotification from \"../components/Notifications/FollowerNotification\";\n\nfunction Notifications({\n  notifications,\n  errorLoading,\n  user,\n  userFollowStats\n}) {\n  const {\n    0: loggedUserFollowStats,\n    1: setUserFollowStats\n  } = useState(userFollowStats);\n  useEffect(() => {\n    const notificationRead = async () => {\n      try {\n        await axios.post(`${baseUrl}/api/notifications`, {}, {\n          headers: {\n            Authorization: cookie.get(\"token\")\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    notificationRead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: \"1.5rem\"\n      },\n      children: [(notifications === null || notifications === void 0 ? void 0 : notifications.length) > 0 ? /*#__PURE__*/_jsxDEV(Segment, {\n        color: \"teal\",\n        raised: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: \"40rem\",\n            overflow: \"auto\",\n            height: \"40rem\",\n            position: \"relative\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Feed, {\n            size: \"small\",\n            children: notifications === null || notifications === void 0 ? void 0 : notifications.map(notification => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [notification.type === \"newLike\" && notification.post !== null && /*#__PURE__*/_jsxDEV(LikeNotification, {\n                notification: notification\n              }, notification._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this), notification.type === \"newComment\" && notification.post !== null && /*#__PURE__*/_jsxDEV(CommentNotification, {\n                notification: notification\n              }, notification._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this), notification.type === \"newFollower\" && /*#__PURE__*/_jsxDEV(FollowerNotification, {\n                notification: notification,\n                loggedUserFollowStats: loggedUserFollowStats,\n                setUserFollowStats: setUserFollowStats\n              }, notification._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NoNotifications, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nNotifications.getInitialProps = async ctx => {\n  try {\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/notifications`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    return {\n      notifications: res.data\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default Notifications;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/pages/notifications.js"],"names":["React","useEffect","useState","Feed","Segment","Divider","Container","axios","baseUrl","parseCookies","cookie","NoNotifications","LikeNotification","CommentNotification","FollowerNotification","Notifications","notifications","errorLoading","user","userFollowStats","loggedUserFollowStats","setUserFollowStats","notificationRead","post","headers","Authorization","get","error","console","log","marginTop","length","maxHeight","overflow","height","position","width","map","notification","type","_id","getInitialProps","ctx","token","res","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Feed, Segment, Divider, Container } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { parseCookies } from \"nookies\";\r\nimport cookie from \"js-cookie\";\r\nimport { NoNotifications } from \"../components/Layout/NoData\";\r\nimport LikeNotification from \"../components/Notifications/LikeNotification\";\r\nimport CommentNotification from \"../components/Notifications/CommentNotification\";\r\nimport FollowerNotification from \"../components/Notifications/FollowerNotification\";\r\n\r\nfunction Notifications({ notifications, errorLoading, user, userFollowStats }) {\r\n  const [loggedUserFollowStats, setUserFollowStats] = useState(userFollowStats);\r\n\r\n  useEffect(() => {\r\n    const notificationRead = async () => {\r\n      try {\r\n        await axios.post(\r\n          `${baseUrl}/api/notifications`,\r\n          {},\r\n          { headers: { Authorization: cookie.get(\"token\") } }\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    notificationRead();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ marginTop: \"1.5rem\" }}>\r\n        {notifications?.length > 0 ? (\r\n          <Segment color=\"teal\" raised>\r\n            <div\r\n              style={{\r\n                maxHeight: \"40rem\",\r\n                overflow: \"auto\",\r\n                height: \"40rem\",\r\n                position: \"relative\",\r\n                width: \"100%\"\r\n              }}\r\n            >\r\n              <Feed size=\"small\">\r\n                {notifications?.map(notification => (\r\n                  <>\r\n                    {notification.type === \"newLike\" && notification.post !== null && (\r\n                      <LikeNotification\r\n                        key={notification._id}\r\n                        notification={notification}\r\n                      />\r\n                    )}\r\n\r\n                    {notification.type === \"newComment\" && notification.post !== null && (\r\n                      <CommentNotification\r\n                        key={notification._id}\r\n                        notification={notification}\r\n                      />\r\n                    )}\r\n\r\n                    {notification.type === \"newFollower\" && (\r\n                      <FollowerNotification\r\n                        key={notification._id}\r\n                        notification={notification}\r\n                        loggedUserFollowStats={loggedUserFollowStats}\r\n                        setUserFollowStats={setUserFollowStats}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </Feed>\r\n            </div>\r\n          </Segment>\r\n        ) : (\r\n          <NoNotifications />\r\n        )}\r\n        <Divider hidden />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nNotifications.getInitialProps = async ctx => {\r\n  try {\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/notifications`, {\r\n      headers: { Authorization: token }\r\n    });\r\n\r\n    return { notifications: res.data };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}