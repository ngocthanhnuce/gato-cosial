{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\pages\\\\index.js\";\n// @ts-nocheck\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { NoPosts } from \"../components/Layout/Nodata\";\nimport CreatePost from \"../components/Post/CreatePost\";\nimport CardPost from \"../components/Post/CardPost\";\nimport { Segment } from \"semantic-ui-react\";\nimport { parseCookies } from \"nookies\";\nimport NotificationPortal from \"../components/Home/NotificationPortal\";\n\nfunction Index(props) {\n  const {\n    user,\n    postsData,\n    errorLoading\n  } = props;\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsData);\n  const {\n    0: showToastr,\n    1: setShowToastr\n  } = useState(false);\n  const {\n    0: pageNumber,\n    1: setPageNumber\n  } = useState(2);\n  const {\n    0: newNotification,\n    1: setNewNotification\n  } = useState(null);\n  const {\n    0: notificationPopup,\n    1: showNotificationPopup\n  } = useState(false);\n  const socket = useRef();\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", {\n        userId: user._id\n      });\n    }\n\n    document.title = `Welcome ${user.name.split(\"\")[0]}`;\n    return () => {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"newNotificationReceived\", ({\n        name,\n        profilePicUrl,\n        username,\n        postId\n      }) => {\n        setNewNotification({\n          name,\n          profilePicUrl,\n          username,\n          postId\n        });\n        showNotificationPopup(true);\n      });\n    }\n  }, []);\n  if (posts.length === 0 || errorLoading) return /*#__PURE__*/_jsxDEV(NoPosts, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 50\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notificationPopup && newNotification !== null && /*#__PURE__*/_jsxDEV(NotificationPortal, {\n      newNotification: newNotification,\n      notificationPopup: notificationPopup,\n      showNotificationPopup: showNotificationPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"15px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        user: user,\n        setPosts: setPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(CardPost, {\n          post: post,\n          user: user,\n          setPosts: setPosts,\n          setShowToastr: setShowToastr\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nIndex.getInitialProps = async ctx => {\n  try {\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/posts`, {\n      headers: {\n        Authorization: token\n      },\n      params: {\n        pageNumber: 1\n      }\n    });\n    return {\n      postsData: res.data\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/pages/index.js"],"names":["React","useEffect","useState","useRef","axios","io","baseUrl","NoPosts","CreatePost","CardPost","Segment","parseCookies","NotificationPortal","Index","props","user","postsData","errorLoading","posts","setPosts","showToastr","setShowToastr","pageNumber","setPageNumber","newNotification","setNewNotification","notificationPopup","showNotificationPopup","socket","current","emit","userId","_id","document","title","name","split","off","on","profilePicUrl","username","postId","length","marginTop","marginBottom","map","post","getInitialProps","ctx","token","res","get","headers","Authorization","params","data","error"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { NoPosts } from \"../components/Layout/Nodata\";\r\nimport CreatePost from \"../components/Post/CreatePost\";\r\nimport CardPost from \"../components/Post/CardPost\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { parseCookies } from \"nookies\";\r\nimport NotificationPortal from \"../components/Home/NotificationPortal\";\r\n\r\nfunction Index(props) {\r\n  const { user, postsData, errorLoading } = props;\r\n  const [posts, setPosts] = useState(postsData);\r\n  const [showToastr, setShowToastr] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(2);\r\n  const [newNotification, setNewNotification] = useState(null);\r\n  const [notificationPopup, showNotificationPopup] = useState(false);\r\n\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!socket.current) {\r\n      socket.current = io(baseUrl);\r\n    }\r\n    if (socket.current) {\r\n      socket.current.emit(\"join\", { userId: user._id });\r\n    }\r\n    document.title = `Welcome ${user.name.split(\"\")[0]}`;\r\n    return () => {\r\n      if (socket.current) {\r\n        socket.current.emit(\"disconnect\");\r\n        socket.current.off();\r\n      }\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\r\n        \"newNotificationReceived\",\r\n        ({ name, profilePicUrl, username, postId }) => {\r\n          setNewNotification({ name, profilePicUrl, username, postId });\r\n\r\n          showNotificationPopup(true);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n  if (posts.length === 0 || errorLoading) return <NoPosts />;\r\n  return (\r\n    <>\r\n      {notificationPopup && newNotification !== null && (\r\n        <NotificationPortal\r\n          newNotification={newNotification}\r\n          notificationPopup={notificationPopup}\r\n          showNotificationPopup={showNotificationPopup}\r\n        />\r\n      )}\r\n      <div style={{ marginTop: \"15px\", marginBottom: \"20px\" }}>\r\n        <CreatePost user={user} setPosts={setPosts} />\r\n        <Segment>\r\n          {posts?.map((post) => (\r\n            <CardPost\r\n              key={post._id}\r\n              post={post}\r\n              user={user}\r\n              setPosts={setPosts}\r\n              setShowToastr={setShowToastr}\r\n            />\r\n          ))}\r\n        </Segment>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/posts`, {\r\n      headers: { Authorization: token },\r\n      params: { pageNumber: 1 },\r\n    });\r\n\r\n    return { postsData: res.data };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}