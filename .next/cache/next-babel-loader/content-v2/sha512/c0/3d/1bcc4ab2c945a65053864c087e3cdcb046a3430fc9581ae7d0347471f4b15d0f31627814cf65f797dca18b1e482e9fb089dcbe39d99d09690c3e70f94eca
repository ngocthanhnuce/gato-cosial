{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\components\\\\Post\\\\CreatePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// @ts-nocheck\nimport React, { useState, useRef } from \"react\";\nimport { Form, Button, Image, Divider, Message, Icon, Grid, Segment } from \"semantic-ui-react\";\nimport uploadPic from \"../../utils/uploadPicToCloudinary\";\nimport { submitNewPost } from \"../../utils/postActions\";\n\nfunction CreatePost({\n  user,\n  setPosts\n}) {\n  const {\n    0: newPost,\n    1: setNewPost\n  } = useState({\n    text: \"\",\n    location: \"\"\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const inputRef = useRef();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: highlighted,\n    1: setHighlighted\n  } = useState(false);\n  const {\n    0: media,\n    1: setMedia\n  } = useState(null);\n  const {\n    0: mediaPreview,\n    1: setMediaPreview\n  } = useState(null);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === \"media\") {\n      var _URL;\n\n      setMedia(files[0]);\n      setMediaPreview((_URL = URL) === null || _URL === void 0 ? void 0 : _URL.createObjectURL(files[0]));\n    }\n\n    setNewPost(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  const addStyles = () => ({\n    textAlign: \"center\",\n    height: \"37px\",\n    width: \"132px\",\n    border: \"dotted\",\n    paddingTop: media === null && \"5px\",\n    cursor: \"pointer\",\n    borderColor: highlighted ? \"green\" : \"black\",\n    marginTop: \"33px\",\n    marginLeft: \"30px\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let picUrl;\n\n    if (media !== null) {\n      picUrl = await uploadPic(media);\n\n      if (!picUrl) {\n        setLoading(false);\n        return setError(\"Error Uploading Image\");\n      }\n    }\n\n    await submitNewPost(newPost.text, newPost.location, picUrl, setPosts, setNewPost, setError);\n    setMedia(null);\n    setMediaPreview(null);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      error: error !== null,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        onDismiss: () => setError(null),\n        content: error,\n        header: \"Oops!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: user.profilePicUrl,\n          circular: true,\n          avatar: true,\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n          placeholder: \"B\\u1EA1n \\u0111aq ngh\\u0129 g\\xEC\",\n          name: \"text\",\n          value: newPost.text,\n          onChange: handleChange,\n          rows: 3,\n          width: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 7,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              style: {\n                marginTop: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                value: newPost.location,\n                name: \"location\",\n                onChange: handleChange,\n                label: \"Th\\xEAm v\\u1ECB tr\\xED\",\n                icon: \"map marker alternate\",\n                placeholder: \"Want to add Location?\",\n                style: {\n                  width: '80%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: inputRef,\n                onChange: handleChange,\n                name: \"media\",\n                style: {\n                  display: \"none\",\n                  marginLeft: \"20px\"\n                },\n                type: \"file\",\n                accept: \"image/*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 7,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => inputRef.current.click(),\n              style: addStyles(),\n              onDrag: e => {\n                e.preventDefault();\n                setHighlighted(true);\n              },\n              onDragLeave: e => {\n                e.preventDefault();\n                setHighlighted(false);\n              },\n              onDrop: e => {\n                var _URL2;\n\n                e.preventDefault();\n                setHighlighted(true);\n                const droppedFile = Array.from(e.dataTransfer.files);\n                setMedia(droppedFile[0]);\n                setMediaPreview((_URL2 = URL) === null || _URL2 === void 0 ? void 0 : _URL2.createObjectURL(droppedFile[0]));\n              },\n              children: media === null ? /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"image\",\n                size: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  style: {\n                    height: \"150px\",\n                    width: \"150px\"\n                  },\n                  src: mediaPreview,\n                  alt: \"PostImage\",\n                  centered: true,\n                  size: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        circular: true,\n        disabled: newPost.text === \"\" || loading,\n        content: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u0110\\u0103ng b\\xE0i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 20\n        }, this),\n        style: {\n          backgroundColor: \"#1DA1F2\",\n          color: \"white\"\n        },\n        icon: \"send\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\nexport default CreatePost;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/components/Post/CreatePost.js"],"names":["React","useState","useRef","Form","Button","Image","Divider","Message","Icon","Grid","Segment","uploadPic","submitNewPost","CreatePost","user","setPosts","newPost","setNewPost","text","location","loading","setLoading","inputRef","error","setError","highlighted","setHighlighted","media","setMedia","mediaPreview","setMediaPreview","handleChange","e","name","value","files","target","URL","createObjectURL","prev","addStyles","textAlign","height","width","border","paddingTop","cursor","borderColor","marginTop","marginLeft","handleSubmit","preventDefault","picUrl","profilePicUrl","display","current","click","droppedFile","Array","from","dataTransfer","backgroundColor","color"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { useState, useRef } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Image,\r\n  Divider,\r\n  Message,\r\n  Icon,\r\n  Grid,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport uploadPic from \"../../utils/uploadPicToCloudinary\";\r\nimport { submitNewPost } from \"../../utils/postActions\";\r\n\r\nfunction CreatePost({ user, setPosts }) {\r\n  const [newPost, setNewPost] = useState({ text: \"\", location: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [highlighted, setHighlighted] = useState(false);\r\n\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (name === \"media\") {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL?.createObjectURL(files[0]));\r\n    }\r\n\r\n    setNewPost((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addStyles = () => ({\r\n    textAlign: \"center\",\r\n    height: \"37px\",\r\n    width: \"132px\",\r\n    border: \"dotted\",\r\n    paddingTop: media === null && \"5px\",\r\n    cursor: \"pointer\",\r\n    borderColor: highlighted ? \"green\" : \"black\",\r\n    marginTop: \"33px\",\r\n    marginLeft: \"30px\"\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    let picUrl;\r\n\r\n    if (media !== null) {\r\n      picUrl = await uploadPic(media);\r\n      if (!picUrl) {\r\n        setLoading(false);\r\n        return setError(\"Error Uploading Image\");\r\n      }\r\n    }\r\n\r\n    await submitNewPost(\r\n      newPost.text,\r\n      newPost.location,\r\n      picUrl,\r\n      setPosts,\r\n      setNewPost,\r\n      setError\r\n    );\r\n\r\n    setMedia(null);\r\n    setMediaPreview(null);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Segment>\r\n      <Form error={error !== null} onSubmit={handleSubmit}>\r\n        <Message\r\n          error\r\n          onDismiss={() => setError(null)}\r\n          content={error}\r\n          header=\"Oops!\"\r\n        />\r\n\r\n        <Form.Group>\r\n          <Image src={user.profilePicUrl} circular avatar inline />\r\n          <Form.TextArea\r\n            placeholder=\"Bạn đaq nghĩ gì\"\r\n            name=\"text\"\r\n            value={newPost.text}\r\n            onChange={handleChange}\r\n            rows={3}\r\n            width={14}\r\n          />\r\n        </Form.Group>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={7}>\r\n              <Form.Group style={{ marginTop: \"10px\" }}>\r\n                <Form.Input\r\n                  value={newPost.location}\r\n                  name=\"location\"\r\n                  onChange={handleChange}\r\n                  label=\"Thêm vị trí\"\r\n                  icon=\"map marker alternate\"\r\n                  placeholder=\"Want to add Location?\"\r\n                  style={{width: '80%'}}\r\n                />\r\n\r\n                <input\r\n                  ref={inputRef}\r\n                  onChange={handleChange}\r\n                  name=\"media\"\r\n                  style={{ display: \"none\", marginLeft: \"20px\" }}\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                />\r\n              </Form.Group>\r\n            </Grid.Column>\r\n            <Grid.Column width={7}>\r\n              <div\r\n                onClick={() => inputRef.current.click()}\r\n                style={addStyles()}\r\n                onDrag={(e) => {\r\n                  e.preventDefault();\r\n                  setHighlighted(true);\r\n                }}\r\n                onDragLeave={(e) => {\r\n                  e.preventDefault();\r\n                  setHighlighted(false);\r\n                }}\r\n                onDrop={(e) => {\r\n                  e.preventDefault();\r\n                  setHighlighted(true);\r\n\r\n                  const droppedFile = Array.from(e.dataTransfer.files);\r\n\r\n                  setMedia(droppedFile[0]);\r\n                  setMediaPreview(URL?.createObjectURL(droppedFile[0]));\r\n                }}\r\n              >\r\n                {media === null ? (\r\n                  <Icon name=\"image\" size=\"large\" />\r\n                ) : (\r\n                  <>\r\n                    <Image\r\n                      style={{ height: \"150px\", width: \"150px\" }}\r\n                      src={mediaPreview}\r\n                      alt=\"PostImage\"\r\n                      centered\r\n                      size=\"medium\"\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n        <Divider hidden />\r\n\r\n        <Button\r\n          circular\r\n          disabled={newPost.text === \"\" || loading}\r\n          content={<strong>Đăng bài</strong>}\r\n          style={{ backgroundColor: \"#1DA1F2\", color: \"white\" }}\r\n          icon=\"send\"\r\n          loading={loading}\r\n        />\r\n      </Form>\r\n      <Divider />\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}