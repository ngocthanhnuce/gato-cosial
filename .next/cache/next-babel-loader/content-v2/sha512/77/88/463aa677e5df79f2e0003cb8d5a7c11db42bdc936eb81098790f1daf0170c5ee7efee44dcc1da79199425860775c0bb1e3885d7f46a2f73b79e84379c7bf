{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\social_network\\\\gato-cosial\\\\pages\\\\reset\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Message, Segment } from \"semantic-ui-react\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport catchErrors from \"../../utils/catchErrors\";\nimport axios from \"axios\";\n\nfunction ResetPage() {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState(null);\n  const {\n    0: emailChecked,\n    1: setEmailChecked\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const resetPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      await axios.post(`${baseUrl}/api/reset`, {\n        email\n      });\n      setEmailChecked(true);\n    } catch (error) {\n      setErrorMsg(catchErrors(error));\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    errorMsg !== null && setTimeout(() => setErrorMsg(null), 5000);\n  }, [errorMsg]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [emailChecked ? /*#__PURE__*/_jsxDEV(Message, {\n      attached: true,\n      icon: \"mail\",\n      header: \"Ki\\u1EC3m tra email c\\u1EE7a b\\u1EA1n\",\n      content: \"Vui l\\xF2ng ki\\u1EC3m tra h\\u1ED9p th\\u01B0 \\u0111\\u1EBFn c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 \\u0111\\u01B0\\u1EE3c h\\u01B0\\u1EDBng d\\u1EABn th\\xEAm\",\n      success: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      attached: true,\n      icon: \"settings\",\n      header: \"\\u0110\\u1EB7t l\\u1EA1i m\\u1EADt kh\\u1EA9u\",\n      color: \"teal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      loading: loading,\n      onSubmit: resetPassword,\n      error: errorMsg !== null,\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Error!\",\n        content: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          icon: \"mail outline\",\n          type: \"email\",\n          iconPosition: \"left\",\n          label: \"Email\",\n          placeholder: \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9 email\",\n          name: \"email\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading || email.length === 0,\n          icon: \"configure\",\n          type: \"submit\",\n          color: \"orange\",\n          content: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default ResetPage;","map":{"version":3,"sources":["E:/social_network/gato-cosial/pages/reset/index.js"],"names":["React","useEffect","useState","Form","Button","Message","Segment","baseUrl","catchErrors","axios","ResetPage","email","setEmail","errorMsg","setErrorMsg","emailChecked","setEmailChecked","loading","setLoading","resetPassword","e","preventDefault","post","error","setTimeout","target","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Message, Segment } from \"semantic-ui-react\";\r\nimport baseUrl from \"../../utils/baseUrl\";\r\nimport catchErrors from \"../../utils/catchErrors\";\r\nimport axios from \"axios\";\r\n\r\nfunction ResetPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n  const [emailChecked, setEmailChecked] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const resetPassword = async e => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      await axios.post(`${baseUrl}/api/reset`, { email });\r\n\r\n      setEmailChecked(true);\r\n    } catch (error) {\r\n      setErrorMsg(catchErrors(error));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    errorMsg !== null && setTimeout(() => setErrorMsg(null), 5000);\r\n  }, [errorMsg]);\r\n\r\n  return (\r\n    <>\r\n      {emailChecked ? (\r\n        <Message\r\n          attached\r\n          icon=\"mail\"\r\n          header=\"Kiểm tra email của bạn\"\r\n          content=\"Vui lòng kiểm tra hộp thư đến của bạn để được hướng dẫn thêm\"\r\n          success\r\n        />\r\n      ) : (\r\n        <Message attached icon=\"settings\" header=\"Đặt lại mật khẩu\" color=\"teal\" />\r\n      )}\r\n\r\n      <Form loading={loading} onSubmit={resetPassword} error={errorMsg !== null}>\r\n        <Message error header=\"Error!\" content={errorMsg} />\r\n\r\n        <Segment>\r\n          <Form.Input\r\n            fluid\r\n            icon=\"mail outline\"\r\n            type=\"email\"\r\n            iconPosition=\"left\"\r\n            label=\"Email\"\r\n            placeholder=\"Nhập địa chỉ email\"\r\n            name=\"email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          />\r\n\r\n          <Button\r\n            disabled={loading || email.length === 0}\r\n            icon=\"configure\"\r\n            type=\"submit\"\r\n            color=\"orange\"\r\n            content=\"Gửi\"\r\n          />\r\n        </Segment>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPage;\r\n"]},"metadata":{},"sourceType":"module"}