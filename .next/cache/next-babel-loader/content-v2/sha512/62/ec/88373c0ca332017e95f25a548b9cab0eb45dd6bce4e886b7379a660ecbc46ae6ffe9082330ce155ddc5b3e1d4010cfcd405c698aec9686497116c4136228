{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Gato-cocial\\\\pages\\\\[username].js\";\n// @ts-nocheck\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { parseCookies } from \"nookies\";\nimport { Grid } from \"semantic-ui-react\";\nimport { NoProfilePosts, NoProfile } from \"../components/Layout/NoData\";\nimport CardPost from \"../components/Post/CardPost\";\nimport cookie from \"js-cookie\";\nimport { PlaceHolderPosts } from \"../components/Layout/PlaceHolderGroup\";\nimport ProfileMenuTabs from \"../components/Profile/ProfileMenuTabs\";\nimport ProfileHeader from \"../components/Profile/ProfileHeader\";\nimport Followers from \"../components/Profile/Followers\";\nimport Following from \"../components/Profile/Following\";\nimport UpdateProfile from \"../components/Profile/UpdateProfile\";\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\nimport Settings from \"../components/Profile/Settings\";\n\nfunction ProfilePage({\n  errorLoading,\n  profile,\n  followersLength,\n  followingLength,\n  user,\n  userFollowStats\n}) {\n  const router = useRouter();\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: showToastr,\n    1: setShowToastr\n  } = useState(false);\n  const {\n    0: activeItem,\n    1: setActiveItem\n  } = useState(\"profile\");\n\n  const handleItemClick = clickedTab => setActiveItem(clickedTab);\n\n  const {\n    0: loggedUserFollowStats,\n    1: setUserFollowStats\n  } = useState(userFollowStats);\n  const ownAccount = profile.user._id === user._id;\n  if (errorLoading) return /*#__PURE__*/_jsxDEV(NoProfile, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 28\n  }, this);\n  useEffect(() => {\n    const getPosts = async () => {\n      setLoading(true);\n\n      try {\n        const {\n          username\n        } = router.query;\n        const res = await axios.get(`${baseUrl}/api/profile/posts/${username}`, {\n          headers: {\n            Authorization: cookie.get(\"token\")\n          }\n        });\n        setPosts(res.data);\n      } catch (error) {\n        alert(\"Error Loading Posts\");\n      }\n\n      setLoading(false);\n    };\n\n    getPosts();\n  }, [router.query.username]);\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 4000);\n  }, [showToastr]);\n  const socket = useRef();\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(baseUrl);\n    }\n\n    if (socket.current) {\n      socket.current.emit(\"join\", {\n        userId: user._id\n      });\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.emit(\"disconnect\");\n        socket.current.off();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showToastr && /*#__PURE__*/_jsxDEV(PostDeleteToastr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(ProfileMenuTabs, {\n            activeItem: activeItem,\n            handleItemClick: handleItemClick,\n            followersLength: followersLength,\n            followingLength: followingLength,\n            ownAccount: ownAccount,\n            loggedUserFollowStats: loggedUserFollowStats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [activeItem === \"profile\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n              profile: profile,\n              ownAccount: ownAccount,\n              loggedUserFollowStats: loggedUserFollowStats,\n              setUserFollowStats: setUserFollowStats\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), loading ? /*#__PURE__*/_jsxDEV(PlaceHolderPosts, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this) : posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(CardPost, {\n              socket: socket,\n              post: post,\n              user: user,\n              setPosts: setPosts,\n              setShowToastr: setShowToastr\n            }, post._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(NoProfilePosts, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), activeItem === \"followers\" && /*#__PURE__*/_jsxDEV(Followers, {\n            user: user,\n            loggedUserFollowStats: loggedUserFollowStats,\n            setUserFollowStats: setUserFollowStats,\n            profileUserId: profile.user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), activeItem === \"following\" && /*#__PURE__*/_jsxDEV(Following, {\n            user: user,\n            loggedUserFollowStats: loggedUserFollowStats,\n            setUserFollowStats: setUserFollowStats,\n            profileUserId: profile.user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), activeItem === \"updateProfile\" && /*#__PURE__*/_jsxDEV(UpdateProfile, {\n            handleChangeShow: handleChangeShow,\n            Profile: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 48\n          }, this), activeItem === \"settings\" && /*#__PURE__*/_jsxDEV(Settings, {\n            newMessagePopup: user.newMessagePopup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nProfilePage.getInitialProps = async ctx => {\n  try {\n    const {\n      username\n    } = ctx.query;\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const {\n      profile,\n      followersLength,\n      followingLength\n    } = res.data;\n    return {\n      profile,\n      followersLength,\n      followingLength\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Gato-cocial/pages/[username].js"],"names":["React","useEffect","useState","useRef","io","useRouter","axios","baseUrl","parseCookies","Grid","NoProfilePosts","NoProfile","CardPost","cookie","PlaceHolderPosts","ProfileMenuTabs","ProfileHeader","Followers","Following","UpdateProfile","PostDeleteToastr","Settings","ProfilePage","errorLoading","profile","followersLength","followingLength","user","userFollowStats","router","posts","setPosts","loading","setLoading","showToastr","setShowToastr","activeItem","setActiveItem","handleItemClick","clickedTab","loggedUserFollowStats","setUserFollowStats","ownAccount","_id","getPosts","username","query","res","get","headers","Authorization","data","error","alert","setTimeout","socket","current","emit","userId","off","length","map","post","handleChangeShow","newMessagePopup","getInitialProps","ctx","token"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { parseCookies } from \"nookies\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { NoProfilePosts, NoProfile } from \"../components/Layout/NoData\";\r\nimport CardPost from \"../components/Post/CardPost\";\r\nimport cookie from \"js-cookie\";\r\nimport { PlaceHolderPosts } from \"../components/Layout/PlaceHolderGroup\";\r\nimport ProfileMenuTabs from \"../components/Profile/ProfileMenuTabs\";\r\nimport ProfileHeader from \"../components/Profile/ProfileHeader\";\r\nimport Followers from \"../components/Profile/Followers\";\r\nimport Following from \"../components/Profile/Following\";\r\nimport UpdateProfile from \"../components/Profile/UpdateProfile\";\r\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\r\nimport Settings from \"../components/Profile/Settings\";\r\n\r\nfunction ProfilePage({\r\n  errorLoading,\r\n  profile,\r\n  followersLength,\r\n  followingLength,\r\n  user,\r\n  userFollowStats\r\n}) {\r\n  const router = useRouter();\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showToastr, setShowToastr] = useState(false);\r\n\r\n  const [activeItem, setActiveItem] = useState(\"profile\");\r\n  const handleItemClick = clickedTab => setActiveItem(clickedTab);\r\n\r\n  const [loggedUserFollowStats, setUserFollowStats] = useState(userFollowStats);\r\n\r\n  const ownAccount = profile.user._id === user._id;\r\n  if (errorLoading) return <NoProfile />;\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { username } = router.query;\r\n        const res = await axios.get(`${baseUrl}/api/profile/posts/${username}`, {\r\n          headers: { Authorization: cookie.get(\"token\") }\r\n        });\r\n\r\n        setPosts(res.data);\r\n      } catch (error) {\r\n        alert(\"Error Loading Posts\");\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    getPosts();\r\n  }, [router.query.username]);\r\n\r\n  useEffect(() => {\r\n    showToastr && setTimeout(() => setShowToastr(false), 4000);\r\n  }, [showToastr]);\r\n\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!socket.current) {\r\n      socket.current = io(baseUrl);\r\n    }\r\n\r\n    if (socket.current) {\r\n      socket.current.emit(\"join\", { userId: user._id });\r\n    }\r\n\r\n    return () => {\r\n      if (socket.current) {\r\n        socket.current.emit(\"disconnect\");\r\n        socket.current.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {showToastr && <PostDeleteToastr />}\r\n      <Grid stackable>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <ProfileMenuTabs\r\n              activeItem={activeItem}\r\n              handleItemClick={handleItemClick}\r\n              followersLength={followersLength}\r\n              followingLength={followingLength}\r\n              ownAccount={ownAccount}\r\n              loggedUserFollowStats={loggedUserFollowStats}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            {activeItem === \"profile\" && (\r\n              <>\r\n                <ProfileHeader\r\n                  profile={profile}\r\n                  ownAccount={ownAccount}\r\n                  loggedUserFollowStats={loggedUserFollowStats}\r\n                  setUserFollowStats={setUserFollowStats}\r\n                />\r\n                {loading ? (\r\n                  <PlaceHolderPosts />\r\n                ) : posts.length > 0 ? (\r\n                  posts.map(post => (\r\n                    <CardPost\r\n                      socket={socket}\r\n                      key={post._id}\r\n                      post={post}\r\n                      user={user}\r\n                      setPosts={setPosts}\r\n                      setShowToastr={setShowToastr}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <NoProfilePosts />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {activeItem === \"followers\" && (\r\n              <Followers\r\n                user={user}\r\n                loggedUserFollowStats={loggedUserFollowStats}\r\n                setUserFollowStats={setUserFollowStats}\r\n                profileUserId={profile.user._id}\r\n              />\r\n            )}\r\n\r\n            {activeItem === \"following\" && (\r\n              <Following\r\n                user={user}\r\n                loggedUserFollowStats={loggedUserFollowStats}\r\n                setUserFollowStats={setUserFollowStats}\r\n                profileUserId={profile.user._id}\r\n              />\r\n            )}\r\n\r\n            {activeItem === \"updateProfile\" && <UpdateProfile handleChangeShow = {handleChangeShow} Profile={profile} />}\r\n\r\n            {activeItem === \"settings\" && (\r\n              <Settings newMessagePopup={user.newMessagePopup} />\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nProfilePage.getInitialProps = async ctx => {\r\n  try {\r\n    const { username } = ctx.query;\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/profile/${username}`, {\r\n      headers: { Authorization: token }\r\n    });\r\n\r\n    const { profile, followersLength, followingLength } = res.data;\r\n\r\n    return { profile, followersLength, followingLength };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}